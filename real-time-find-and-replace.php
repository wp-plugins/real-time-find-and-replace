<?php
/*
Plugin Name: Real-Time Find and Replace
Version: 2.1
Plugin URI: http://infolific.com/technology/software-worth-using/real-time-find-and-replace-for-wordpress/
Description: Set up find and replace rules that are executed AFTER a page is generated by WordPress, but BEFORE it is sent to a user's browser.
Author: Marios Alexandrou
Author URI: http://infolific.com/technology/
*/

/*
* Admin Page
*/

add_action('admin_menu', 'far_add_pages');

function far_add_pages() { // Add a  submenu under Tools
	$page = add_submenu_page( 'tools.php', 'Real-Time Find and Replace', 'Real-Time Find and Replace', 'activate_plugins', 'real-time-find-and-replace', 'far_options_page');
	add_action( "admin_print_scripts-$page", 'far_admin_scripts' );
}
function far_options_page(){
	if (isset($_POST['setup-update'])) {
		$_POST = stripslashes_deep($_POST);
		if (is_array($_POST['farfind'])){ // If atleast one find has been submitted
			foreach ($_POST['farfind'] as $key => $find){
				if (empty($find)){ // if empty ones have been submitted we get rid of the extra data submitted if any.
					unset($_POST['farfind'][$key]);
					unset($_POST['farregex'][$key]);
					unset($_POST['farreplace'][$key]);
					}
				if (!isset($_POST['farregex'][$key])) // convert line feeds on non-regex only
					$_POST['farfind'][$key] = str_replace("\r\n", "\n", $find);
			}
		}
		unset($_POST['setup-update']);
		
		if(empty($_POST['farfind']))
			delete_option('far_plugin_settings'); // delete the option if there are no settings.   Keeps the database clean if they aren't using it and uninstall
		else
			update_option('far_plugin_settings', $_POST);
		
		?><div id="message" class="updated fade">
			<p><strong>Options Updated</strong></p>
		</div><?php
	} ?>
	<div class="wrap" style="padding-bottom:5em">
	<h2>Real-Time Find and Replace</h2>
	<p> Enter your find and replace cases below. Click and drag to change the order. </p>
	<div id="far_items">
   
	<form method="post" action="<?php echo $_SERVER["REQUEST_URI"]; ?>">
		<input type="button" class="button left" value="Add" onClick="addFormField(); return false;" />
		<input type="submit" class="button left" value="Update Settings" />
		<input type="hidden" name="setup-update" />
		<br style="clear:both;"/>
		<h3 class="findh">Find</h3>
		<h3 class="replaceh">Replace</h3>

		<ul id="far_itemlist">
		<?php
	$farsettings = get_option('far_plugin_settings');
	if (is_array($farsettings['farfind'])){  //if there are any finds already set
		$i=1;
		foreach ($farsettings['farfind'] as $key => $find){
			if(isset($farsettings['farregex'][$key])) {
				$regex = 'CHECKED';
			} else {
				$regex = '';
			}
			$replace = $farsettings['farreplace'][$key];		
			echo "<li id='row$i'>";
			echo "<textarea class='left' name='farfind[$i]' id='farfind$i'>".esc_textarea( $find )."</textarea>";
			echo "<textarea class='left' name='farreplace[$i]' id='farreplace$i'>".esc_textarea( $replace )."</textarea>";
			echo "<label class='left' for='farregex$i'>RegEx?:&nbsp;</label><input class='left'  type='checkbox' name='farregex[$i]' id='farregex$i' $regex /><br />";
			echo "<br /><input type='button' class='button left remove' value='Remove' onClick='removeFormField(\"#row$i\"); return false;' />\n</p>";
			unset($regex);
			$i++;
		}
	} else {
		echo 'Click "Add" to begin.';
	}
	?>
</ul>
		<div id="divTxt"></div>
	     <div class="clearpad"></div>
		<input type="button" class="button left" value="Add" onClick="addFormField(); return false;" />
		<input type="submit" class="button left" value="Update Settings" />
	 	<input type="hidden" id="id" value="<?php echo $i; /*used so javascript returns unique ids*/ ?>" />
	</form>
</div>

<div id="far_sb">

<div class="postbox" id="far_sbone">
<h3 class='hndle'><span>Documentation</span></h3>
		<div class="inside">
			<strong>Instructions</strong>
			<p>This plugin will replace HTML code AFTER it is rendered. None of these changes affect your files. To undo changes, just delete the find/replace pair.</p>
			<ol>
            <li>Type in text/code to find on the left. This can be a plain text match or a regular expression (use / at the start and end).</li>
			<li>Type in the text/code you want to replace the find with on the right.</li>
			<li>If using a regular expression for the find, check the regex box.</li>
			</ol>
			<strong>Tips</strong>
			<ol>
            <li>Want to remove text/code from a page? Leave the replace box blank.</li>
			<li>Want to disable a rule, but not delete it? Put something random in the match box that will not actually be matched.</li>
			<li>Not seeing your changes? Turn off your cache!</li>
			<li>Seeing a blank page on your site? A bad regex is the most common cause.</li>
			<li>Need some ideas? <a href="http://infolific.com/technology/internet/handiest-wordpress-plugin-youve-never-heard-of/">Check out this post.</a></li>
			</ol>
		</div>
	</div>


<div class="postbox"  id="far_sbtwo">
<h3 class='hndle'><span>Support</span></h3>
		<div class="inside">
			<p>You best bet is to post on the <a href="http://wordpress.org/support/plugin/real-time-find-and-replace">plugin support page</a>.</p>
			<p>Please consider supporting me too! Follow me on <a href="https://twitter.com/malexandrou">Twitter</a> or <a href="http://wordpress.org/plugins/real-time-find-and-replace/">rate the plugin</a>. Thanks!</p>
		</div>
	</div>


<div class="postbox" id="far_sbthree">
<h3 class='hndle'><span>Other Plugins</span></h3>
		<div class="inside">
			<ul>
				<li><a href="http://wordpress.org/extend/plugins/rss-includes-pages/">RSS Includes Pages</a>: Modifies RSS feeds so that they include pages and not just posts. My most popular plugin!
				<li><a href="http://wordpress.org/extend/plugins/social-media-email-alerts/">Social Media E-Mail Alerts</a>: Receive e-mail alerts when your site gets traffic from social media sites of your choosing. You can also set up alerts for when certain parameters app.</li>
			</ul>
		</div>
	</div>



</div>



	</div>
	<?php 
}
function far_admin_scripts(){ // these scripts print on the admin page
	wp_enqueue_script('far_dynamicfields', plugins_url() . '/real-time-find-and-replace/js/jquery.dynamicfields.js', array('jquery'));
	wp_enqueue_script('jquery-ui-1', plugins_url() . '/real-time-find-and-replace/js/jquery-ui-1.10.3.custom.min.js', array('jquery'));
	wp_enqueue_style('far_styles', plugins_url() . '/real-time-find-and-replace/css/far.css');
	
	
}

/*
* Core Functionality
*/
function far_ob_call($buffer){ // $buffer contains entire page
	$farsettings = get_option('far_plugin_settings');
	if (is_array($farsettings['farfind'])){
		foreach ($farsettings['farfind'] as $key => $find){
			if(isset($farsettings['farregex'][$key]))
				$buffer = preg_replace($find, $farsettings['farreplace'][$key], $buffer);
			else
				$buffer = str_replace($find, $farsettings['farreplace'][$key], $buffer);
		}
	}
	return $buffer;
}

function far_template_redirect(){
	ob_start();
	ob_start('far_ob_call');
}
add_action('template_redirect', 'far_template_redirect');
?>